(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{398:function(e,t,i){"use strict";i.r(t);var o=i(26),n=Object(o.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("It was quite a while since I did the last post about the progress in rg3d (November 2020, ouch).\nNow it's the time to fix that! For last three months rg3d and rusty-editor has gained\nlots and lots of big features and improvements. Also I started making new game using the engine - a\nSci-Fi 3D shooter called Station Iapetus, check the end of the post for more info, but for now just\ncheck the video:")]),e._v(" "),t("YtVideo",{attrs:{url:"https://www.youtube.com/embed/tENty9W1_NA"}}),e._v(" "),t("h2",{attrs:{id:"rg3d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rg3d"}},[e._v("#")]),e._v(" rg3d")]),e._v(" "),t("p",[e._v("Lets start from the engine, it has 139 new commits from November 2020, here are the most interesting\nchanges (prepare for the wall of text ðŸ˜ƒ ):")]),e._v(" "),t("ul",[t("li",[e._v("Improved dark UI theme - "),t("a",{attrs:{href:"https://raw.githubusercontent.com/mrDIMAS/rusty-editor/master/screenshots/latest.png",target:"_blank",rel:"noopener noreferrer"}},[e._v("default dark theme is more elegant now"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("li",[e._v('Added verbosity levels for logger - now you can reduce "noise" levels from the engine by setting\nverbosity for the logger.')]),e._v(" "),t("li",[e._v("Improved lightmap quality - lightmaps are now smoothed and almost seam-free.")]),e._v(" "),t("li",[e._v("Added proper syncing between physics and scene graph - which means that it is possible now to\nadd a static physical body to a node and every descendant node will provide its geometry as collider\nfor the body.")]),e._v(" "),t("li",[e._v("Improved examples - added navigational mesh example which demonstrates how to use\nnavigation agents.")]),e._v(" "),t("li",[e._v("Improved particle systems - added cylinder emitter for particle systems, improved performance.")]),e._v(" "),t("li",[e._v('TextBox widget now have multiline mode and different "commit" modes (LostFocus, Enter, etc).')]),e._v(" "),t("li",[e._v("Improved lots of UI widgets and added VectorImage widget.")]),e._v(" "),t("li",[e._v("rg3d-sound is now able to manage multiple contexts - which means that you can easily create multiple\nsound scenes and operate on them separately! This is extremely useful for multi-scene games: for example\nyou can now create a sound scene for a menu and one for game level and all entities on the sound scenes\nwill be completely decoupled from each other.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/mrDIMAS/hrtf",target:"_blank",rel:"noopener noreferrer"}},[e._v("hrtf"),t("OutboundLink")],1),e._v(" crate now has 2 times better performance - thanks for\nperformance improvements in rustfft crate.")]),e._v(" "),t("li",[e._v('Added support for 64-bit FBX format (version 7500+) - it is very important because mixamo.com migrated\nto latest FBX SDK and all of the animations and character models have become "unloadable" - now it is fixed.')]),e._v(" "),t("li",[e._v("Animation blending state machines were improved - I added BlendAnimationsByIndex state machine node which\nallows you to switch animations by index with given amount of time for transition.")]),e._v(" "),t("li",[e._v("It's now possible to copy nodes in-place - previously it was possible only to copy node from scene\nto scene.")]),e._v(" "),t("li",[e._v("The number of draw calls for UI was reduced by 70% - I changed the way of how clipping works: previously\nit was using stencil buffer, now it uses scissor test.")]),e._v(" "),t("li",[e._v("Fixed UI clipping issues - this is related to previous point - it seems that using stencil test wasn't a\ngood idea.")]),e._v(" "),t("li",[e._v("Fixed text measurement in the UI - previously text's height was measured incorrectly.")]),e._v(" "),t("li",[e._v("Opacity for UI widgets was added - this extensively used to greyout disabled widgets.")]),e._v(" "),t("li",[e._v("Layout of Scroll- and Wrap- panels was fixed.")]),e._v(" "),t("li",[e._v("Light scatter issues for spot lights were fixed - due to incorrect trigonometry calculations light\nvolumes were clipped.")]),e._v(" "),t("li",[e._v("Support for transparent meshes - simple forward renderer was added to render transparent meshes.")]),e._v(" "),t("li",[e._v("Migrated to rapier 0.5 - which fixed lots of issues in the physics.")]),e._v(" "),t("li",[e._v("Animation signal handling is fixed when animation playing in reverse.")]),e._v(" "),t("li",[e._v("Animation tracks now are able to filter position/scale/rotation.")]),e._v(" "),t("li",[e._v("Sprite rendering fixes - there was incorrect blending options that were causing graphical issues.")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/FyroxEngine/Fyrox/blob/master/rg3d-core/src/pool.rs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pool"),t("OutboundLink")],1),e._v(" now implements FromIterator\ntrait.")]),e._v(" "),t("li",[e._v("Navigation meshes are now correctly copied when instantiating model resource, however inheritance is\nnot yet implemented.")]),e._v(" "),t("li",[e._v("Fixed polygon triangulation - there was an incorrect loop exit condition.")]),e._v(" "),t("li",[e._v('Now FBX loader does not add redundant "root" node in the scene during instantiation.')]),e._v(" "),t("li",[e._v("Fixed layout issues in FileBrowser and FileSelector widgets.")]),e._v(" "),t("li",[e._v("Now it is possible to render instances of UserInterface in separate render targets - this is extremely\nuseful when you need to draw offscreen UI (for example a touch screen panel in a sci-fi game).")]),e._v(" "),t("li",[e._v("Added Fast Approximate AntiAliasing (FXAA) - not the best solution for anti-aliasing, but very cheap\nand easy to implement.")]),e._v(" "),t("li",[e._v("Fixed lots of Clippy warnings.")]),e._v(" "),t("li",[e._v("Added integrity checks for resource instances - now engine automatically adds missing nodes from resource\nif an instance of the resource does not have it.")]),e._v(" "),t("li",[e._v("Improved resource inheritance - now the engine is able to correctly resolve dependencies of resources.")]),e._v(" "),t("li",[e._v('Scene nodes now have tags - very useful feature to mark nodes with game info. For example, lights can be\nmarked with "FlashingLight" tag and later on you can search all the lights with such tag and add "flashing"\nbehaviour.')]),e._v(" "),t("li",[e._v("Now scene graph allows to perform custom search using custom predicate.")]),e._v(" "),t("li",[e._v("Slightly improved user interface performance.")]),e._v(" "),t("li",[e._v("Improved performance of animation machine's "),t("code",[e._v("set_parameter")]),e._v(" method.")]),e._v(" "),t("li",[e._v("Now it is possible to select binding direction between a rigid body and a scene node - previously only\nnode-to-body binding was possible, but now body-to-node binding is available too.")]),e._v(" "),t("li",[e._v("Lots of improvements in SceneDrawingContext - fixed drawing of shapes, added "),t("code",[e._v("draw_capsule")]),e._v(" and\n"),t("code",[e._v("draw_sphere_section")]),e._v(", "),t("code",[e._v("draw_segment_capsule")]),e._v(" methods.")]),e._v(" "),t("li",[e._v("Fixed calculation of isometric transform which was used in physics-to-graph transform syncing.")]),e._v(" "),t("li",[e._v("Now scene gathers performance statistics per frame.")]),e._v(" "),t("li",[e._v("Added ColorGradientBuilder which allows to build ColorGradient in declarative manner.")]),e._v(" "),t("li",[e._v("Added navigation agents (commonly known as NavmeshAgent) which are used for navigation on arbitrary\nnavigation meshes.")]),e._v(" "),t("li",[e._v("Added path smoothing for navmeshes - now behaviour of agents are much nicer, check the video below.")])]),e._v(" "),t("YtVideo",{attrs:{url:"https://www.youtube.com/embed/tqFdQ5OPB1I"}}),e._v(" "),t("h2",{attrs:{id:"rusty-editor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rusty-editor"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/mrDIMAS/rusty-editor",target:"_blank",rel:"noopener noreferrer"}},[e._v("rusty-editor"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("img",{attrs:{src:"/assets/rusty_editor_27_02_21_00.jpg",alt:"Screenshot1"}})]),e._v(" "),t("p",[e._v("rusty-editor changes rapidly too, it has 96 new commits from November 2020, here are the most interesting\nchanges:")]),e._v(" "),t("ul",[t("li",[e._v("Added an editor for navigation meshes - there is still no automatic generation for navmeshes, so I added\nsimple navmesh editor.")]),e._v(" "),t("li",[e._v("Added an editor for particle systems - currently is not so flexible, but powerful enough for some\nnot too complex effects.")]),e._v(" "),t("li",[e._v("Improved copy/paste in rusty-editor - now it correctly copies all associated entities (rigid bodies,\ncolliders, etc)")]),e._v(" "),t("li",[e._v("Configurator now remembers history of previously selected working directories, which is very useful for\nquick iterations.")]),e._v(" "),t("li",[e._v("Now gizmos have shadows disabled.")]),e._v(" "),t("li",[e._v("Interaction modes now behaves "),t("em",[e._v("almost")]),e._v(" correctly.")]),e._v(" "),t("li",[e._v("Added debug drawing of the physics - this allows a user to precisely configure location of colliders and rigid\nbodies.")]),e._v(" "),t("li",[e._v("Now it is possible to edit properties of colliders.")]),e._v(" "),t("li",[e._v("Fixed deletion of complex selection - this means that editor won't panic or behave unexpectedly when you\ntrying to delete multiple nodes at once.")]),e._v(" "),t("li",[e._v("Added support for joints of various kinds.")]),e._v(" "),t("li",[e._v("Disabled ability to delete root node.")]),e._v(" "),t("li",[e._v("Added ability to create directional lights.")]),e._v(" "),t("li",[e._v("Added scene validation before saving.")]),e._v(" "),t("li",[e._v("Some menu items are now disabled when there is no active scene.")]),e._v(" "),t("li",[e._v("Asset previewer now has grid which allows you to quickly understand the size of a model.")]),e._v(" "),t("li",[e._v("Now editor prints current scene's path.")]),e._v(" "),t("li",[e._v('Added "breadcrumbs" - it shows a path from selected node to scene root, it is very useful for quick navigation.')]),e._v(" "),t("li",[e._v("Limited camera pitch - now it is impossible to be upside-down.")]),e._v(" "),t("li",[e._v("Added switch for binding direction for rigid bodies.")]),e._v(" "),t("li",[e._v('Added "Is Sensor" flag for rigid bodies.')]),e._v(" "),t("li",[e._v("Disabled editing node names of resource instances - this is related to resource inheritance, it relies on the\nsuggestion that name won't change after instantiation.")]),e._v(" "),t("li",[e._v('Track instantiated animations - previously editor just "forget" about instantiated animations which was leading\nto orphaned animations.')]),e._v(" "),t("li",[e._v("Added ability to edit tags.")])]),e._v(" "),t("h2",{attrs:{id:"stationiapetus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stationiapetus"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://github.com/mrDIMAS/StationIapetus",target:"_blank",rel:"noopener noreferrer"}},[e._v("StationIapetus"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("As I mentioned in the beginning of the post, I started making a new game. It will eventually be released in the Steam,\nand I hope it will become the proof that the engine is production-ready quality. Here are some fresh screenshots:")]),e._v(" "),t("p",[t("img",{attrs:{src:"/assets/station_iapetus_27_02_21_00.jpg",alt:"Screenshot1"}}),e._v(" "),t("img",{attrs:{src:"/assets/station_iapetus_27_02_21_01.jpg",alt:"Screenshot1"}})]),e._v(" "),t("p",[e._v("I'm planning to release demo in at 29th of March to get some feedback and improved the game before release it in\nSteam. Check the "),t("a",{attrs:{href:"https://github.com/mrDIMAS/StationIapetus",target:"_blank",rel:"noopener noreferrer"}},[e._v("repository"),t("OutboundLink")],1),e._v(" for more info.")]),e._v(" "),t("h2",{attrs:{id:"the-future-of-the-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-future-of-the-engine"}},[e._v("#")]),e._v(" The future of the engine")]),e._v(" "),t("p",[e._v("Unfortunately, the future of the engine heavily depends on the money. I've tried to get some sponsorship from various\ncompanies, but with no luck yet. I hope to get some money by selling Station Iapetus in the Steam. I'm working on\nthe engine for more than 2 years now and getting very little financial support. If you want to see the project alive,\n"),t("strong",[e._v("please consider to make a donation")]),e._v(" on "),t("a",{attrs:{href:"https://patreon.com/mrdimas",target:"_blank",rel:"noopener noreferrer"}},[e._v("Patreon"),t("OutboundLink")],1),e._v(" or\n"),t("a",{attrs:{href:"https://liberapay.com/mrDIMAS",target:"_blank",rel:"noopener noreferrer"}},[e._v("LiberaPay"),t("OutboundLink")],1),e._v(" , unfortunately GitHub sponshorship is not available in my country.")])],1)}),[],!1,null,null,null);t.default=n.exports}}]);